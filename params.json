{"name":"Spectacles","tagline":"A utility tool for writing BDD specs in Django ","body":"# Installation\r\n\r\n    ...\r\n\r\n# Getting Started \r\n\r\n### 1. Add to installed apps\r\n\r\n**In settings.py:**\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        spectacles,\r\n        ...\r\n    )\r\n    \r\nYou also need to set a value for `TEST_DOMAIN` in `settings.py`. \r\n\r\n\t# this is the default used by Django's test server\r\n\tTEST_DOMAIN = 'http://localhost:8081'\r\n\r\n\r\n\r\n   \r\n### 2. Write your first functional test: \r\n\r\nCreate a file called specs.py \r\n(As a preference, I like to use a naming pattern along the lines of spec_*.py for the modules containing my spec tests).\r\n\r\n#### First: write what you want to do in plain text:\r\n\r\n\tfrom spectacles.functionaltest import FunctionalTestCase\r\n\tfrom spectacles.common import DEFAULT_WAIT_TIME, get_absolute_url as u\r\n\tfrom splinter import Browser \r\n\r\n\r\n\tclass HomePageTestCase(FunctionalTestCase):\r\n\r\n   \t\tdef setUp(self):\r\n       \tself.b = Browser()\r\n\r\n\t    def test_homepage_loads(self):\r\n\t        \"\"\"\r\n\t\t\t* Go to the homepage\r\n        \t* It has a h1 title        \r\n\t        \"\"\"\r\n\t        \r\n\t\tdef tearDown(self):\r\n       \tself.b.quit()\r\n\r\n**Notes:**\r\n\r\n* We extend `FunctionalTestCase`, not `TestCase`\r\n* `get_absolute_url` handles getting urls using Django's LiveTestSever\r\n\r\n#### Finally: write the actual test code:\r\n\r\n**Add the following to `test_homepage_loads()`:**\r\n\r\n    self.scenario(\"Testing loading the homepage\")\r\n    self.step(\"Go to homepage\")\r\n    self.b.visit(u(\"/\"))\r\n\r\n    expect = [\r\n        (\"h1\", \"There is a h1 title\"),            \r\n    ]\r\n\r\n    self.expect(expect)\r\n\r\n\r\n### 3. Run your test\r\n\r\nYou can now run your spec tests using:\r\n\r\n    python manage.py test -p spec*.py\r\n    \r\nAssuming we haven't got an h1 on out page, we should get something like:\r\n\r\n##Testing loading the homepage\r\n\r\n* Go to homepage\r\n* [x] Failed: There is a h1 title\r\n* -> False is not True\r\n* **TODO:** We need an element with selector: h1\r\n\r\nA successful response should look something like:\r\n\r\n##Testing loading the homepage\r\n\r\n* Go to homepage\r\n* (: Passed: There is a h1 title\r\n.\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 19.513s\r\n\r\nOK\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}